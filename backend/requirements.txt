fastapi
uvicorn
python-multipart  # 파일 업로드 처리에 필요
boto3             # AWS S3 연동
python-dotenv     # .env 파일 로드

#------------------------------------------
# requirements.txt

# Web Framework (FastAPI) 및 ASGI 서버 (uvicorn)
fastapi
uvicorn
python-multipart  # FastAPI에서 파일 업로드 처리에 필요

# 환경 변수 로드 (.env 파일 사용 시)
python-dotenv

# AWS SDK (S3, SQS, Lambda, EC2 등 연동 시 필요)
# 백엔드 서비스 (S3 업로드, SQS 메시지 전송)와 워커 서비스 (S3 다운로드 등) 모두 사용 가능
boto3

# PDF 텍스트 추출 (워커 서비스에서 사용)
pdfminer.six

# AI/NLP Framework (워커 서비스에서 LangChain, GPT 모델 사용 시 필요)
langchain             # LangChain 프레임워크 코어
langchain-community   # LangChain의 다양한 구성 요소 (로더 등)
openai                # OpenAI API 연동 (GPT 모델 사용)

# HTTP 클라이언트 (외부 API 호출 시 필요, 예: onprem.py, oracle.py 등에서 REST API 호출 시)
requests

# --- 선택 사항 / 조건부 의존성 ---
# 특정 클라우드 서비스 또는 기능 구현 시 주석을 해제하거나 필요에 따라 추가/제거하세요.

# Oracle Cloud Infrastructure SDK (Oracle Cloud 서비스 연동 시)
# oci

# 음악 처리 라이브러리 (워커 서비스에서 악보 파싱, 음악 생성/합성 시 필요)
# music21           # 음악 이론 객체, 악보 파싱/생성 (MusicXML, MIDI 등)
# mido              # MIDI 메시지 및 파일 처리
# librosa           # 오디오 분석 (MP3 생성 파이프라인 등에 사용될 수 있음)
# pyrubberband      # 오디오 처리 (피치/타임 스케일링, 기본 합성에는 불필요할 수 있음)
# soundfile         # 오디오 파일 읽기/쓰기 (MP3 인코딩 전/후 WAV 등)
# 특정 OMR 라이브러리 (상용 또는 복잡한 설치 필요)

# SQS 리스너 라이브러리 (워커를 SQS 큐 폴링 방식으로 실행 시)
# sqs-listener # 또는 다른 SQS 클라이언트 및 리스너 구현 방식
